{"version":3,"file":"static/js/429.3ab5da2b.chunk.js","mappings":"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","sources":["components/WhyChose/WhyChoseItem.js","components/WhyChose/AppWhyChose.js","components/AboutUs/AppAboutUs.js","components/Service/ServiceItem.js","components/Service/AppService.js","components/Service/AppLatestWork.js","components/Service/AppMoreWork.js","components/Statistic/AppStatistic.js","components/WhatCustomersSay/AppWhatCustomersSay.js","components/Carousel/AppCarousel.js","components/Home.js","components/OurPartner/AppOurPartner.js","components/SiteSection.js","components/SwiperContainer.js","components/Team/AppTeam.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\n\nclass WhyChoseItem extends Component {\n    render() {\n        const { title, description, image } = this.props.item;\n        return (\n            <Grid item xs={6} sm={4} md={3}>\n                <Card className='h-100'>\n                    <CardMedia\n                        component='img'\n                        height='200'\n                        image={image}\n                        style={{\n                            objectFit: 'cover',\n                        }}\n                        alt={title} />\n                    <CardContent>\n                        <Typography gutterBottom variant='h5' component='div'>\n                            {title}\n                        </Typography>\n                        <Typography variant='body2'>\n                            {description}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        );\n    }\n}\n\nWhyChoseItem.propTypes = {\n    item: PropTypes.object.isRequired,\n}\n\nexport default WhyChoseItem;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { Skeleton } from \"@mui/material\";\nimport WhyChoseItem from \"./WhyChoseItem\";\n\nclass AppWhyChose extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            whyChoseList: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.whyChoseData().then(r => {\n            this.setState({ isLoaded: true, whyChoseList: r.data });\n        });\n    }\n\n    whyChoseData = async () => {\n        return await axios.get(\"/api/whychoses/\");\n    };\n\n    render() {\n        const { isLoaded, whyChoseList } = this.state;\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={3}>\n                    {Array.from(new Array(4)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={3} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant=\"rectangular\" width={\"100%\"} height={118} />\n                                <Skeleton />\n                                <Skeleton width=\"60%\" />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                whyChoseList.length > 0 ? (\n                    <Grid container spacing={2}>\n                        {whyChoseList.map(item => <WhyChoseItem key={item.id} item={item} />)}\n                    </Grid>\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppWhyChose;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Box, Skeleton } from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { Markup } from \"interweave\";\nimport Card from \"@mui/material/Card\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nimport \"swiper/css\";\nimport \"swiper/css/lazy\"\nimport \"swiper/css/effect-cards\"\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\"\n\nimport SwiperCore, { EffectCards, Lazy, Pagination } from 'swiper';\n\nSwiperCore.use([Lazy, Pagination, EffectCards]);\n\nclass AppAboutUs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            aboutUsMessage: [], isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.aboutUsData().then(r => {\n            this.setState({ isLoaded: true, aboutUsMessage: r.data });\n        });\n    }\n\n    aboutUsData = async () => {\n        return await axios.get(\"/api/aboutusmessage/\");\n    };\n\n    render() {\n        const { isLoaded, aboutUsMessage } = this.state;\n        if (!isLoaded) {\n            return (<Box\n                sx={{\n                    p: 2, width: '100%', borderRadius: '10px', display: 'flex', justifyContent: 'center',\n                }}>\n                <Skeleton\n                    className=\"rounded\"\n                    variant=\"rectangular\"\n                    width=\"80%\"\n                    height={120} />\n            </Box>)\n        } else {\n            return (aboutUsMessage.length > 0 ? (\n                <Card sx={{ display: 'flex' }} className={\"w-100 h-100\"} elevation={0}>\n                    <Grid container>\n                        <Grid item xs={12} sm={12} md={8}>\n                            <CardContent sx={{ flex: '1 0 auto' }}>\n                                <CardMedia\n                                    component=\"img\"\n                                    style={{ maxHeight: '300px' }}\n                                    image={aboutUsMessage[0].image}\n                                    alt={aboutUsMessage[0].label} />\n                                <Typography component=\"div\" variant=\"h5\">\n                                    {aboutUsMessage[0].label}\n                                </Typography>\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"div\">\n                                    <Markup content={aboutUsMessage[0].description} />\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={4}>\n                            <CardContent sx={{ flex: '1 0 auto' }}>\n                                <Swiper dir=\"rtl\" lazy={true} effect={'cards'} grabCursor={true} className=\"mySwiper\">\n                                    {aboutUsMessage[0].points.map((point, index) => (\n                                        <SwiperSlide key={index}>\n                                            <Card className={\"w-100 h-100\"}>\n                                                <Box>\n                                                    <CardMedia\n                                                        component=\"img\"\n                                                        style={{ maxHeight: '200', \"objectFit\": \"revert\" }}\n                                                        image={point.image}\n                                                        alt={point.label}\n                                                        className=\"swiper-lazy\"\n                                                    />\n                                                    <div\n                                                        className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" />\n                                                </Box>\n                                                {point.title ?\n                                                    <CardContent>\n                                                        <Typography gutterBottom variant=\"h3\" component=\"div\">\n                                                            {point.label}\n                                                        </Typography>\n                                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                                            {point.title}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                                            {point.description}\n                                                        </Typography>\n                                                    </CardContent>\n                                                    : ''}\n                                            </Card>\n                                        </SwiperSlide>\n                                    ))}\n                                </Swiper>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                </Card>) : (''));\n        }\n    }\n}\n\nexport default AppAboutUs;","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Grid from \"@mui/material/Grid\";\nimport { ImageOutlined } from '@mui/icons-material';\n\nclass ServiceItem extends Component {\n    render() {\n        const { title, description, image } = this.props.service;\n        return (\n            <Grid item xs={6} sm={4} md={3}>\n                <Card className={\"h-100\"}>\n                    <CardHeader\n                        title={title}\n                        className={\"fw-bolde\"}\n                    />\n                    {image ?\n                        <CardMedia\n                            component=\"img\"\n                            alt={title}\n                            style={{ objectFit: \"cover\", maxHeight: \"200px\" }}\n                            image={image}\n                            title={title} /> : <ImageOutlined color={\"action\"} style={{ fontSize: \"150px\" }} />\n                    }\n                    {description ? (\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {description}\n                            </Typography>\n                        </CardContent>\n                    ) : null}\n                </Card>\n            </Grid>\n        );\n    }\n}\n\nServiceItem.propTypes = {\n    service: PropTypes.object.isRequired,\n}\nexport default ServiceItem;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { Skeleton } from \"@mui/material\";\nimport ServiceItem from \"./ServiceItem\";\n\nclass AppService extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceList: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.serviceData().then(r => {\n            this.setState({ isLoaded: true, serviceList: r.data });\n        });\n    }\n\n    serviceData = async () => {\n        return await axios.get(\"/api/services/\");\n    };\n\n    render() {\n        const { isLoaded, serviceList } = this.state;\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={3}>\n                    {Array.from(new Array(3)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={4} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant=\"rectangular\" width={\"100%\"} height={150} />\n                                <Skeleton width=\"60%\" />\n                                <Skeleton />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                serviceList.length > 0 ? (\n                    <Grid container spacing={2}>\n                        {serviceList.map(item => <ServiceItem key={item.id} service={item} />)}\n                    </Grid>\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppService;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport 'swiper/css';\nimport 'swiper/css/lazy';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\n\nimport SwiperCore, { Lazy, Pagination, Navigation } from 'swiper';\nimport { Box } from '@mui/material';\n\nSwiperCore.use([Lazy, Pagination, Navigation]);\n\nclass AppLatestWork extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            latestWorkList: [], isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.latestWorkData().then(r => {\n            this.setState({ isLoaded: true, latestWorkList: r.data });\n        });\n    }\n\n    latestWorkData = async () => {\n        return await axios.get('/api/latestworks/');\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, latestWorkList } = this.state;\n        if (isLoaded) {\n            latestWorkList.map((item, index) => (slides.push(<SwiperSlide key={`slide-${index}`}>\n                <Card className={'w-100 h-100'}>\n                    <Box>\n                        <CardMedia\n                            component='img'\n                            image={item.image}\n                            style={{\n                                objectFit: 'cover',\n                                maxHeight: '250px'\n                            }}\n                            alt={item.title}\n                            className='swiper-lazy'\n                        />\n                        <div className='swiper-lazy-preloader swiper-lazy-preloader-black' />\n                    </Box>\n                    {item.title || item.description ? (<CardContent>\n                        {item.title ?\n                            <Typography gutterBottom variant='h5' component='h5'>\n                                {item.title}\n                            </Typography> : ('')}\n                        {item.description ? (<Typography variant='body2' color='textSecondary' component='p'>\n                            {item.description}\n                        </Typography>) : ('')}\n                    </CardContent>) : ('')}\n                </Card>\n            </SwiperSlide>)));\n        }\n        return (latestWorkList.length > 0 ? (\n            <Swiper dir='rtl' lazy={true} navigation={true} slidesPerView={1} pagination={{\n                'type': 'progressbar'\n            }} spaceBetween={30} breakpoints={{\n                // when window width is >= 320px\n                320: {\n                    slidesPerView: 2, spaceBetween: 10,\n                }, // when window width is >= 640px\n                640: {\n                    slidesPerView: 2, spaceBetween: 10\n                }, // when window width is >= 768px\n                768: {\n                    slidesPerView: 3, spaceBetween: 10\n                }, // when window width is >= 1024px\n                1024: {\n                    slidesPerView: 4, spaceBetween: 10\n                },\n            }} className='latest-works-swiper pt-1 pb-1'>\n                {slides}\n            </Swiper>) : (''));\n    }\n}\n\nexport default AppLatestWork;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Box, Grid } from '@material-ui/core';\nimport { Skeleton } from '@mui/material';\nimport { styled } from '@mui/system';\nimport TabsUnstyled from '@mui/base/TabsUnstyled';\nimport TabsListUnstyled from '@mui/base/TabsListUnstyled';\nimport TabPanelUnstyled from '@mui/base/TabPanelUnstyled';\nimport { buttonUnstyledClasses } from '@mui/base/ButtonUnstyled';\nimport TabUnstyled, { tabUnstyledClasses } from '@mui/base/TabUnstyled';\n\nconst blue = {\n    50: '#F0F7FF',\n    100: '#C2E0FF',\n    200: '#80BFFF',\n    300: '#66B2FF',\n    400: '#3399FF',\n    500: '#007FFF',\n    600: '#0072E5',\n    700: '#0059B2',\n    800: '#004C99',\n    900: '#003A75',\n};\n\nconst Tab = styled(TabUnstyled)`\n  font-family: IBM Plex Sans, sans-serif;\n  color: white;\n  cursor: pointer;\n  font-size: 0.875rem;\n  font-weight: bold;\n  background-color: transparent;\n  width: 100%;\n  padding: 12px 16px;\n  margin: 6px 6px;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    background-color: ${blue[400]};\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    color: #fff;\n    outline: none;\n    background-color: ${blue[200]};\n  }\n\n  &.${tabUnstyledClasses.selected} {\n    background-color: ${blue[50]};\n    color: ${blue[600]};\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst TabPanel = styled(TabPanelUnstyled)`\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n`;\n\nconst TabsList = styled(TabsListUnstyled)`\n  min-width: 320px;\n  background-color: ${blue[500]};\n  border-radius: 8px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-content: space-between;\n`;\n\n\nclass AppMoreWork extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moreWorkList: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.latestWorkData().then(r => {\n            this.setState({ isLoaded: true, moreWorkList: r.data });\n        });\n    }\n\n    latestWorkData = async () => {\n        return await axios.get('/api/moreworks/');\n    };\n\n    render() {\n\n        const { isLoaded } = this.state;\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={3}>\n                    {Array.from(new Array(3)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={4} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant='rectangular' width={'100%'} height={150} />\n                                <Skeleton width='60%' />\n                                <Skeleton />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                <TabsUnstyled defaultValue={0}>\n                    <TabsList style={{ overflow: 'auto' }}>\n                        <Tab>One</Tab>\n                        <Tab>Two</Tab>\n                        <Tab>Three</Tab>\n                    </TabsList>\n                    <TabPanel value={0}>First content</TabPanel>\n                    <TabPanel value={1}>Second content</TabPanel>\n                    <TabPanel value={2}>Third content</TabPanel>\n                </TabsUnstyled>\n            );\n        }\n    }\n}\n\nexport default AppMoreWork;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { SwiperSlide } from \"swiper/react\";\nimport { Skeleton } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport SwiperContainer from \"../SwiperContainer\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nclass AppStatistic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statisticsList: [],\n            isLoaded: false,\n        }\n    }\n\n    componentDidMount() {\n        this.statisticsListData().then(r => {\n            this.setState({ isLoaded: true, statisticsList: r.data });\n        });\n    }\n\n    statisticsListData = async () => {\n        return await axios.get(\"/api/statistics/\");\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, statisticsList } = this.state;\n        if (isLoaded) {\n            statisticsList.map((item, index) => (\n                slides.push(\n                    <SwiperSlide key={`slide-${index}`} tag=\"li\">\n                        <Card sx={{ minHeight: 200 }} className={'w-100 h-100 border-' + item.theme} variant=\"outlined\">\n                            <CardContent className={item.text_as_theme ? 'text-' + item.theme : ''}>\n                                <Typography variant=\"h2\" component=\"h2\">\n                                    {item.count}\n                                </Typography>\n                                <Typography sx={{ mb: 4 }} variant=\"h4\">\n                                    {item.title}\n                                </Typography>\n                                {item.description ? (\n                                    <Typography variant=\"body2\" color={'GrayText'}>\n                                        {item.description}\n                                    </Typography>\n                                ) : ('')}\n                            </CardContent>\n                        </Card>\n                    </SwiperSlide>\n                )\n            ));\n        }\n        if (!isLoaded) {\n            const variants = ['h1', 'h3',];\n            const skeletonSlides = [];\n            Array.from(new Array(4)).map((el, i) =>\n                skeletonSlides.push(\n                    <SwiperSlide key={`slide-${i}`}>\n                        <Grid item xs={12} sm={6} md={12} key={i}>{\n                            variants.map((variant) => (\n                                <Typography component=\"div\" key={variant} variant={variant}>\n                                    <Skeleton />\n                                </Typography>\n                            ))}\n                        </Grid>\n                    </SwiperSlide>\n                )\n            )\n            return (\n                <SwiperContainer navigation={false} slides={skeletonSlides} clickable={false} dynamicBullets={false} />\n            )\n        } else {\n            return (\n                statisticsList.length > 0 ? (\n                    <SwiperContainer navigation={true} slides={slides} clickable={true} dynamicBullets={true} />\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppStatistic;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { SwiperSlide } from \"swiper/react\";\nimport { Box, Card, CardContent, CardMedia, Grid, Typography, Skeleton } from \"@mui/material\";\nimport \"swiper/css\";\nimport \"swiper/css/lazy\"\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\"\n\nimport SwiperContainer from \"../SwiperContainer\";\nimport SwiperCore, { Lazy, Pagination } from 'swiper';\n\nSwiperCore.use([Lazy, Pagination]);\n\nclass AppWhatCustomersSay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            whatCustomerSayList: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.whatCustomerSayData().then(r => {\n            this.setState({ isLoaded: true, whatCustomerSayList: r.data });\n        });\n    }\n\n    whatCustomerSayData = async () => {\n        return await axios.get(\"/api/whatcustomerssay/\");\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, whatCustomerSayList } = this.state;\n        if (isLoaded) {\n            whatCustomerSayList.map((item, index) => (\n                slides.push(\n                    <SwiperSlide key={`slide-${index}`}>\n                        <Card className=\"w-100 h-100\">\n                            <Box>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt={item.title}\n                                    style={{ \"objectFit\": \"cover\" }}\n                                    height=\"300\"\n                                    image={item.image}\n                                    title={item.title}\n                                    className=\"swiper-lazy\"\n                                />\n                                <div className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" />\n                            </Box>\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    {item.title}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {item.description}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </SwiperSlide>\n                )\n            ));\n        }\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={4}>\n                    {Array.from(new Array(4)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={3} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant=\"rectangular\" width=\"100%\" height={300} />\n                                <Skeleton width=\"100%\" />\n                                <Skeleton width=\"100%\" />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                whatCustomerSayList.length > 0 ? (\n                    <SwiperContainer slides={slides} />\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppWhatCustomersSay;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport \"swiper/css\";\nimport \"swiper/css/lazy\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\nimport '../../index.css';\n\nimport SwiperCore, { Autoplay, Lazy, Navigation, Pagination } from 'swiper';\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { Skeleton, Box, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\n\nconst ImageBox = styled(Box)(({ theme }) => ({\n    position: 'relative',\n    height: 500,\n    [theme.breakpoints.down('sm')]: {\n        width: '100% !important', // Overrides inline-style\n        height: 200,\n    },\n}));\n\nconst ImageSrc = styled('img')({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n});\n\nconst ContainerBox = styled(Stack)(({ theme }) => ({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n}));\n\nconst ImageBackdrop = styled('span')(({ theme }) => ({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n}));\n\nSwiperCore.use([Lazy, Autoplay, Pagination, Navigation]);\n\nclass AppCarousel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            carouselsList: [],\n            isLoaded: false,\n        }\n    }\n\n    componentDidMount() {\n        this.carouselsData().then(r => {\n            this.setState({ isLoaded: true, carouselsList: r.data });\n        });\n    }\n\n    carouselsData = async () => {\n        return await axios.get(\"/api/carousels/\");\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, carouselsList } = this.state;\n        if (isLoaded) {\n            carouselsList.map((carousel, index) => (\n                slides.push(\n                    <SwiperSlide key={`slide-${index}`} tag=\"li\">\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', maxHeight: \"500px\", minWidth: 40, width: '100%' }}>\n                            <ImageBox\n                                focusRipple\n                                style={{\n                                    width: \"100%\",\n                                }}>\n                                <ImageSrc src={carousel.image} className=\"swiper-lazy\" />\n                                <div className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" />\n                                <ImageBackdrop className=\"MuiImageBackdrop-root\" />\n                                <ContainerBox>\n                                    <Grid container>\n                                        <Grid item xs={12} sm={12} md={12}>\n                                            <Typography variant=\"h2\">\n                                                {carousel.title}\n                                            </Typography>\n                                            <Typography variant=\"h5\">\n                                                {carousel.description}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={12} className={'mt-4'}>\n                                            {carousel.actions.map((element, index) => {\n                                                return (<Button key={index} href={element.action} color={element.button} variant={element.outline ? 'outlined' : 'contained'} className=\"m-1\">{element.label}</Button>);\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </ContainerBox>\n                            </ImageBox>\n                        </Box>\n                    </SwiperSlide>\n                )\n            ));\n        }\n        if (!isLoaded) {\n            return (\n                <Box\n                    sx={{\n                        width: '100%',\n                        borderRadius: '10px',\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}>\n                    <Skeleton\n                        animation={'wave'}\n                        className=\"rounded\"\n                        variant=\"rectangular\"\n                        width=\"100%\"\n                        height={400} />\n                </Box>\n            )\n        } else {\n            return (\n                carouselsList.length > 0 ? (\n                    <Swiper dir=\"rtl\" lazy={true} spaceBetween={30} centeredSlides={true} autoplay={{\n                        \"delay\": 2500,\n                        \"disableOnInteraction\": false\n                    }} pagination={{\n                        \"dynamicBullets\": true,\n                        \"clickable\": true\n                    }} navigation={true} className=\"main-swiper mt-5\">\n                        {slides}\n                    </Swiper>\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppCarousel;","import React, { Component } from 'react';\nimport Container from '@mui/material/Container';\nimport axios from 'axios';\nimport AppWhyChose from './WhyChose/AppWhyChose';\nimport AppAboutUs from './AboutUs/AppAboutUs';\nimport AppService from './Service/AppService';\nimport AppLatestWork from './Service/AppLatestWork';\nimport AppMoreWork from './Service/AppMoreWork';\nimport AppStatistic from './Statistic/AppStatistic';\nimport AppWhatCustomersSay from './WhatCustomersSay/AppWhatCustomersSay';\nimport AppTeam from './Team/AppTeam';\nimport AppOurPartner from './OurPartner/AppOurPartner';\nimport AppCarousel from './Carousel/AppCarousel';\nimport SiteSection from './SiteSection';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            siteSections: [],\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        this.sectionData();\n    }\n\n    sectionData = () => {\n        axios.get('/api/sitesections/').then((res) => {\n            this.setState({ isLoaded: true, siteSections: res.data });\n        }).catch((err) => console.log(err));\n    };\n\n    render() {\n        const { siteSections, isLoaded } = this.state;\n        const sections = {};\n        if (isLoaded) {\n            siteSections.forEach((section) => {\n                sections[section.section_type] = section;\n            });\n        }\n\n        return (\n            <div>\n                <AppCarousel />\n                <Container component='div'>\n                    <div className='mt-2'>\n                        {sections.why_chose ? (\n                            <SiteSection\n                                title={sections.why_chose.title}\n                                subtitle={sections.why_chose.subtitle}\n                                description={sections.why_chose.description}\n                            />\n                        ) : ''}\n                        <AppWhyChose />\n                    </div>\n                    <div className='mt-2'>\n                        {sections.aboutus ? (\n                            <SiteSection\n                                title={sections.aboutus.title} subtitle={sections.aboutus.subtitle}\n                                description={sections.aboutus.description}\n                            />\n                        ) : ''}\n                        <AppAboutUs />\n                    </div>\n                    <div className='mt-2'>\n                        {sections.services ? (\n                            <SiteSection\n                                title={sections.services.title}\n                                subtitle={sections.services.subtitle}\n                                description={sections.services.description}\n                            />\n                        ) : ''}\n                        <AppService />\n                    </div>\n                    <div className='mt-2'>\n                        {sections.latestwork ? (\n                            <SiteSection\n                                title={sections.latestwork.title}\n                                subtitle={sections.latestwork.subtitle}\n                                description={sections.latestwork.description}\n                            />\n                        ) : ''}\n                        <AppLatestWork />\n                    </div>\n                    <div className='mt-2'>\n                        {sections.morework ? (\n                            <SiteSection\n                                title={sections.morework.title}\n                                subtitle={sections.morework.subtitle}\n                                description={sections.morework.description}\n                            />\n                        ) : ''}\n                        <AppMoreWork />\n                    </div>\n                    <div className='mt-2'>\n                        <AppStatistic />\n                    </div>\n                    <div className='mt-1'>\n                        {sections.whatcustomersay ? (\n                            <SiteSection\n                                title={sections.morework.title}\n                                subtitle={sections.morework.subtitle}\n                                description={sections.morework.description}\n                            />\n                        ) : ''}\n                        <AppWhatCustomersSay />\n                    </div>\n                    <div className='mt-1'>\n                        {sections.ourteam ? (\n                            <SiteSection\n                                title={sections.ourteam.title}\n                                subtitle={sections.ourteam.subtitle}\n                                description={sections.ourteam.description}\n                            />\n                        ) : ''}\n                        <AppTeam />\n                    </div>\n                    <div className='mt-2'>\n                        {sections.ourpartner ? (\n                            <SiteSection\n                                title={sections.ourpartner.title}\n                                subtitle={sections.ourpartner.subtitle}\n                                description={sections.ourpartner.description}\n                            />\n                        ) : ''}\n                        <AppOurPartner />\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Skeleton, Box, Card, CardMedia, Grid } from \"@mui/material\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport \"swiper/css\";\nimport \"swiper/css/lazy\"\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\"\n\nimport SwiperCore, { Lazy, Pagination } from 'swiper';\n\nSwiperCore.use([Lazy, Pagination]);\n\nclass AppOurPartner extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ourPartnerList: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.ourPartnerData().then(r => {\n            this.setState({ isLoaded: true, ourPartnerList: r.data });\n        });\n    }\n\n    ourPartnerData = async () => {\n        return await axios.get(\"/api/ourpartner/\");\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, ourPartnerList } = this.state;\n        if (isLoaded) {\n            ourPartnerList.map((item, index) => (\n                slides.push(\n                    <SwiperSlide key={`slide-${index}`}>\n                        <Card className=\"w-100 h-100\">\n\n                            <Box>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt={item.title}\n                                    style={{ maxHeight: \"100px\", objectFit: \"scale-down\" }}\n                                    image={item.logo}\n                                    title={item.title}\n                                    className=\"swiper-lazy\"\n                                />\n                                <div className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" />\n                            </Box>\n                        </Card>\n                    </SwiperSlide>\n                )\n            ));\n        }\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={4}>\n                    {Array.from(new Array(4)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={3} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant=\"rectangular\" width=\"100%\" height={100} />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                ourPartnerList.length > 0 ? (\n                    <Swiper dir=\"rtl\" lazy={true} pagination={{\n                        \"type\": \"progressbar\"\n                    }} slidesPerView={1} spaceBetween={30} breakpoints={{\n                        // when window width is >= 320px\n                        320: {\n                            slidesPerView: 2, spaceBetween: 10\n                        }, // when window width is >= 640px\n                        640: {\n                            slidesPerView: 2, spaceBetween: 10\n                        }, // when window width is >= 768px\n                        768: {\n                            slidesPerView: 2, spaceBetween: 10\n                        }, // when window width is >= 1024px\n                        1024: {\n                            slidesPerView: 4, spaceBetween: 10\n                        },\n                    }} className=\"our-partner-swiper p-1\">\n                        {slides}\n                    </Swiper>\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppOurPartner;","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Typography from '@mui/material/Typography';\n\nclass SiteSection extends Component {\n    render() {\n        const { title, subtitle, description } = this.props;\n        return (\n            <div className={\"mb-2\"}>\n                <Typography variant=\"h3\" component=\"h3\" color=\"primary\">\n                    {title}\n                </Typography>\n                <Typography variant=\"h4\" component=\"h5\">\n                    {subtitle}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h5\" color=\"textSecondary\">\n                    {description}\n                </Typography>\n            </div>\n        );\n    }\n}\nSiteSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    description: PropTypes.string,\n}\n\nexport default SiteSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Swiper } from 'swiper/react';\n\nexport default function SwiperContainer(props) {\n    const { slides, navigation = true, clickable = true, dynamicBullets = true } = props;\n    return (<Swiper dir='rtl' lazy={true} slidesPerView={1} spaceBetween={30} breakpoints={{\n        // when window width is >= 320px\n        320: {\n            slidesPerView: 2, spaceBetween: 10\n        }, // when window width is >= 640px\n        640: {\n            slidesPerView: 2, spaceBetween: 10\n        }, // when window width is >= 768px\n        768: {\n            slidesPerView: 2, spaceBetween: 10\n        }, // when window width is >= 1024px\n        1024: {\n            slidesPerView: 4, spaceBetween: 10\n        },\n    }} navigation={navigation} pagination={{\n        'clickable': { clickable }, 'dynamicBullets': { dynamicBullets }\n    }} className='container-swiper pt-1 pb-1' style={{ zIndex: 0, }}>\n        {slides}\n    </Swiper>);\n}\n\nSwiperContainer.propTypes = {\n    slides: PropTypes.arrayOf(PropTypes.element),\n    navigation: PropTypes.bool,\n    clickable: PropTypes.bool,\n    dynamicBullets: PropTypes.bool,\n}","import React, { Component } from \"react\";\nimport { SwiperSlide } from \"swiper/react\";\nimport { Box, Card, CardContent, CardMedia, Grid, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Skeleton } from \"@mui/material\";\nimport { PersonOutlined } from '@mui/icons-material';\n\nimport \"swiper/css\";\nimport \"swiper/css/lazy\"\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\"\n\nimport SwiperContainer from \"../SwiperContainer\";\nimport SwiperCore, { Lazy, Pagination } from 'swiper';\n\nSwiperCore.use([Lazy, Pagination]);\n\nclass AppTeam extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamsList: [],\n            isLoaded: false,\n            thumbWidth: 75,\n        }\n    }\n\n    componentDidMount() {\n        this.teamsData().then(r => {\n            this.setState({ isLoaded: true, teamsList: r.data });\n        });\n    }\n\n    teamsData = async () => {\n        return await axios.get(\"/api/teams/\");\n    };\n\n    render() {\n        const slides = [];\n        const { isLoaded, teamsList } = this.state;\n        if (isLoaded) {\n            teamsList.map((team, index) => (\n                slides.push(\n                    <SwiperSlide key={`slide-${index}`}>\n                        <Card className=\"w-100 h-100\">\n                            {team.profile ?\n                                (\n                                    <Box>\n                                        <CardMedia\n                                            component=\"img\"\n                                            alt={team.name}\n                                            style={{ \"objectFit\": \"contain\" }}\n                                            height=\"140\"\n                                            image={team.profile}\n                                            title={team.name}\n                                            className=\"swiper-lazy\"\n                                        />\n                                        <div className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" />\n                                    </Box>\n                                ) : (<PersonOutlined color={\"action\"} style={{ fontSize: \"140px\" }} />)\n                            }\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    {team.name}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {team.job}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </SwiperSlide>\n                )\n            ));\n        }\n        if (!isLoaded) {\n            return (\n                <Grid container spacing={4}>\n                    {Array.from(new Array(4)).map((el, i) =>\n                        <Grid item xs={12} sm={6} md={3} key={i}>\n                            <Box sx={{ pt: 0.5 }}>\n                                <Skeleton variant=\"rectangular\" width=\"100%\" height={200} />\n                                <Skeleton width=\"40%\" />\n                                <Skeleton width=\"60%\" />\n                            </Box>\n                        </Grid>\n                    )}\n                </Grid>\n            )\n        } else {\n            return (\n                teamsList.length > 0 ? (\n                    <SwiperContainer slides={slides} />\n                ) : ('')\n            );\n        }\n    }\n}\n\nexport default AppTeam;"],"names":["WhyChoseItem","this","props","item","title","description","image","Grid","xs","sm","md","Card","className","CardMedia","component","height","style","objectFit","alt","CardContent","Typography","gutterBottom","variant","Component","AppWhyChose","whyChoseData","axios","state","whyChoseList","isLoaded","then","r","setState","data","length","container","spacing","map","id","Array","from","el","i","Box","sx","pt","Skeleton","width","SwiperCore","Lazy","Pagination","EffectCards","AppAboutUs","aboutUsData","aboutUsMessage","display","elevation","flex","maxHeight","label","color","content","dir","lazy","effect","grabCursor","points","point","index","p","borderRadius","justifyContent","ServiceItem","service","CardHeader","ImageOutlined","fontSize","AppService","serviceData","serviceList","Navigation","AppLatestWork","latestWorkData","latestWorkList","slides","push","navigation","slidesPerView","pagination","spaceBetween","breakpoints","blue","Tab","styled","TabUnstyled","buttonUnstyledClasses","tabUnstyledClasses","TabPanel","TabPanelUnstyled","TabsList","TabsListUnstyled","AppMoreWork","moreWorkList","TabsUnstyled","defaultValue","overflow","value","AppStatistic","statisticsListData","statisticsList","tag","minHeight","theme","text_as_theme","count","mb","SwiperContainer","clickable","dynamicBullets","variants","skeletonSlides","AppWhatCustomersSay","whatCustomerSayData","whatCustomerSayList","ImageBox","position","down","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","ContainerBox","Stack","alignItems","palette","common","white","ImageBackdrop","backgroundColor","black","opacity","transition","transitions","create","Autoplay","AppCarousel","carouselsData","carouselsList","carousel","flexWrap","minWidth","focusRipple","src","actions","element","Button","href","action","button","outline","centeredSlides","autoplay","animation","Home","sectionData","res","siteSections","catch","err","console","log","sections","forEach","section","section_type","Container","why_chose","SiteSection","subtitle","aboutus","services","latestwork","morework","whatcustomersay","ourteam","AppTeam","ourpartner","AppOurPartner","ourPartnerData","ourPartnerList","logo","zIndex","teamsData","teamsList","thumbWidth","team","profile","name","job"],"sourceRoot":""}